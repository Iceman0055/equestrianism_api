<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- user_info表 -->
<mapper namespace="com.equestrianism.api.dao.RoleInfoMapper">

    <!--返回Map-->
    <resultMap id="BaseResultMap" type="com.equestrianism.api.model.po.RoleInfoEntity">
        <id column="role_id" property="roleId" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="short_name" property="shortName" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER"/>
        <result column="data_version" property="dataVersion" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        role_id, role_name, short_name, remark, status, delete_flag, data_version, create_date, update_date
    </sql>


    <insert id="insert" parameterType="com.equestrianism.api.model.po.UserInfoEntity">
        INSERT INTO
            role_info (
                role_id,
                role_name,
                short_name,
                remark,
                status,
                delete_flag,
                data_version,
                create_date
            ) VALUES (
                #{roleId, jdbcType=VARCHAR},
                #{roleName, jdbcType=VARCHAR},
                #{shortName, jdbcType=VARCHAR},
                #{remark, jdbcType=VARCHAR},
                1,
                0,
                1,
                now()
            )

    </insert>

    <update id="updateBySelective" parameterType="com.equestrianism.api.model.po.RoleInfoEntity">
        UPDATE
            role_info
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName, jdbcType=VARCHAR},
            </if>
            <if test="shortName != null and shortName != ''">
                short_name = #{shortName, jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag, jdbcType=INTEGER}
            </if>
        </set>
        WHERE
            role_id = #{roleId, jdbcType=VARCHAR}
    </update>

    <select id="selectRoleListByPage" parameterType="com.equestrianism.api.model.vo.RoleInfoListVO" resultType="com.equestrianism.api.model.model.RoleInfoListModel">
        SELECT
            role_id     roleId,
            role_name   roleName,
            short_name  shortName,
            remark      remark,
            status      status
        FROM
            role_info
        WHERE
            delete_flag = 0
        limit #{beginIndex}, #{pageRecorders}
    </select>

    <select id="countRoleListByPage" parameterType="com.equestrianism.api.model.vo.RoleInfoListVO" resultType="java.lang.Integer">
        SELECT
            IFNULL( count(1), 0 )
        FROM
            role_info
        WHERE
            delete_flag = 0
    </select>

</mapper>
